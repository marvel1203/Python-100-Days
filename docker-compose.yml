services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: python100days_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: python100days
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: python100days_redis
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  # Django后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: python100days_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8020 --workers 4"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - /var/run/docker.sock:/var/run/docker.sock  # 挂载Docker socket
      - ./Day01-20:/app/course_resources/Day01-20:ro
      - ./Day21-30:/app/course_resources/Day21-30:ro
      - ./Day31-35:/app/course_resources/Day31-35:ro
      - ./Day36-45:/app/course_resources/Day36-45:ro
      - ./Day46-60:/app/course_resources/Day46-60:ro
      - ./Day61-65:/app/course_resources/Day61-65:ro
      - ./Day66-80:/app/course_resources/Day66-80:ro
      - ./Day81-90:/app/course_resources/Day81-90:ro
      - ./Day91-100:/app/course_resources/Day91-100:ro
      - ./番外篇:/app/course_resources/番外篇:ro
      - ./公开课:/app/course_resources/公开课:ro
    ports:
      - "8020:8020"
    env_file:
      - ./backend/.env
    depends_on:
      - mysql
      - redis
    networks:
      - app_network

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: python100days_celery
    command: celery -A config worker -l info
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - mysql
    networks:
      - app_network

  # Celery Beat
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: python100days_celery_beat
    command: celery -A config beat -l info
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - mysql
    networks:
      - app_network

  # Vue前端
  frontend:
    image: node:20-alpine
    container_name: python100days_frontend
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "9540:9540"
    environment:
      - NODE_ENV=development
    networks:
      - app_network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: python100days_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

volumes:
  mysql_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  app_network:
    driver: bridge
